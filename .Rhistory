geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
x_term <- results %>% filter(name == "x_term")
x_term
summary <- x_term %>% group_by(reg, t) %>% summarise(x_term = sum(value))
summary
ggplot() +
geom_line(data = summary, aes(x = t, y = x_term, col = reg), size = 1)
ggplot() +
geom_line(data = summary, aes(x = t, y = x_term, col = reg), size = 1) +
facet_wrap(~reg)
ggplot() +
geom_line(data = summary, aes(x = t, y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg)
ggplot() +
geom_line(data = summary, aes(x = t, y = x_term, fill = reg, group = 1), size = 1) +
facet_wrap(~reg)
ggplot() +
geom_line(data = summary, aes(x = t, y = x_term, col = reg, group = 2), size = 1) +
facet_wrap(~reg)
renew
ggplot() +
geom_line(data = summary, aes(x = t, y = x_term, col = reg, group = 2), size = 1)
summary
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 2), size = 1)
ggplot() +
geom_areaa(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 2), size = 1)
ggplot() +
geom_area(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 2), size = 1)
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 2), size = 1)
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1)
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg)
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("hours") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
View(summary)
View(summary)
View(x_term)
View(x_term)
x_invest_intermittent <- results %>% filter(name == "x_invest_intermittent")
x_invest_thermal_cap <- results %>% filter(name == "x_invest_thermal_cap")
invest <- rbind(x_invest_intermittent, x_invest_thermal_cap) %>% select(name, reg, p, value, iTechnology)
invest$iTechnology[invest$name == "x_invest_thermal_cap"] <- "Thermal"
expansion <- invest %>% group_by(reg, iTechnology) %>% summarise(avg_exp = mean(value))
ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
View(expansion)
View(expansion)
# This script reads the tables that result of reading Newave deck scripts and
# put the data in the format that COPA reads, creating the file "investOpts_br.csv".
# Setting the working directories
# Reading the investOpts.csv original. That`s the result we intend to achieve.
setwd("C:/Users/cancella/Google Drive/!IIASA/COPA/data/investOptions")
#setwd("C:/Users/Rafael/Desktop/Google Drive @PPE/!IIASA/COPA/data/investOptions")
invest_opts_sweden <- read.csv2("investOpts - original.csv", header = T, sep =";")
invest_opts_sweden <- as_tibble(invest_opts_sweden)
# Reading the tables with brazilian information of investiment costs, variable costs and max capacities of the thermal plants.
#setwd("C:/Users/Rafael/Desktop/Google Drive @PPE/!IIASA/COPA  Initial Data/Costs/Tables")
setwd("C:/Users/cancella/Google Drive/!IIASA/COPA  Initial Data/Costs/Tables")
br_cvu <-  read.csv2("tabela_para_invest_opts_br_sem_CI.csv", header = T, sep =";")
br_cvu <- as_tibble(br_cvu)
br_ci <- read.csv2("tabela_para_invest_opts_br_com_CI.csv", header = T, sep =";", stringsAsFactors = F)
br_ci <- as_tibble(br_ci)
# adjusting the order of the columns
invest_opts_br <- select(br_ci, NUM, Subsistema, NOME, TIPO_COMB.)
# We need 3 lines for each plant. So we need 366 lines (122 plants)
id_br <- as_tibble(c(1:372))
regions_br <- as_tibble(rep(c(rep("BR1",3),rep("BR2",3),rep("BR3",3),rep("BR4",3)),31))
invest_opts_br <- cbind(id_br,regions_br)
# Setting the columns names
colnames(invest_opts_br, do.NULL = TRUE, prefix = "col")
colnames(invest_opts_br) <- c("id", "Region")
# Reading the archieve containing the numbers of plants in each subsystem
#setwd("C:/Users/Rafael/Desktop/Google Drive @PPE/!IIASA/COPA  Initial Data/Costs/Tables")
setwd("C:/Users/cancella/Google Drive/!IIASA/COPA  Initial Data/Costs/Tables")
plants_ss <- read.csv2("usinas_em_cada_subsistema.csv", header = T, sep = ";")
# Making a correspondence between name of plant, its subsystem and the names that COPA reads.
corresp <- transmute(br_ci, nome = NOME, sub = Subsistema) %>% group_by(sub) %>% mutate(P = "")
# Adding the names that COPA reads in each subsystem -> subsystem 1
for (i in c(1:plants_ss$n[1])){
corresp$P[i] = paste("P",i, sep = "")
}
# subsystem 2
num_plants_sub2 <- c(1:plants_ss$n[2])
for (i in c(1:plants_ss$n[2]) + 46){
corresp$P[i] = paste("P",num_plants_sub2[i - 46], sep = "")
}
# subsystem 3
num_plants_sub3 <- c(1:plants_ss$n[3])
for (i in c(1:plants_ss$n[3]) + 62){
corresp$P[i] = paste("P",num_plants_sub3[i - 62], sep = "")
}
# subsystem 4
num_plants_sub4 <- c(1:plants_ss$n[4])
for (i in c(1:plants_ss$n[4]) + 103){
corresp$P[i] = paste("P",num_plants_sub3[i - 103], sep = "")
}
# Adding a column with the respective subsystem of each plant in the COPA format
subsystems <- as_tibble(c(rep("BR1",46),rep("BR2", 16), rep("BR3",41), rep("BR4",19)))
corresp_sub <- bind_cols(corresp, subsystems)
corresp <- corresp_sub
corresp[,3] <- corresp_sub[,4]
corresp[,4] <- corresp_sub[,3]
colnames(corresp, do.NULL = TRUE, prefix = "col")
colnames(corresp) <- c("nome", "sub", "Region", "P")
# Expanding the table to each plant get three entries
exp_corresp <- bind_rows(corresp, corresp, corresp)
# Arranging by names in order to get the three entries
exp_corresp <- arrange(exp_corresp, nome)
# I guess I'll mantain the alfabethic order and I'll see if COPA reads in this way.
#### Building the column technology ####
# Transforming the initial tables in tables of 3 entries
br_ci_3 <- bind_rows(br_ci, br_ci, br_ci) %>% arrange(NOME)
br_cvu_3 <- bind_rows(br_cvu, br_cvu, br_cvu) %>% arrange(NOME)
# Continuar adiciionando uma coluna com o indice duplo para gerar a coluna technology.
# Adding the tecnology column. It'll be different of the swedish model, because it'll difer the thermal technology
tech_vetor <- transmute(br_ci_3, Technology = paste("Thermal", TIPO_COMB., sep = "."))
exp_corresp <- bind_cols(exp_corresp,tech_vetor)
#### Adding the column "variable"
variable <- as_tibble(rep(c("Investment", "VarCost", "MaxCap"),nrow(exp_corresp)/3))
exp_corresp <- bind_cols(exp_corresp, variable)
colnames(exp_corresp, do.NULL = TRUE, prefix = "col")
colnames(exp_corresp) <- c("nome", "sub", "Region", "P", "Technology", "Variable")
#### Adding values of InvestCost, VarCost and MaxCap
# Adding an empty column
exp_corresp <- mutate(exp_corresp, Value = "")
# exp_corresp <- bind_cols(exp_corresp, br_ci_3[,8])
# Adjusting the table br_ci_3, replacing the equals values by zeros.
br_ci_3_loop <- br_ci_3
for (i in c(1:nrow(br_ci_3))){
if(br_ci_3[i,7] == br_ci_3[i + 1,7]){
br_ci_3_loop[i + 1,7] = 0
} else {br_ci_3_loop[i + 1,7] = br_ci_3_loop[i + 1,7]
}}
exp_corresp_ci <- exp_corresp
exp_corresp_ci[,7] <- br_ci_3_loop[,7]
#exp_corresp_ci[which(exp_corresp1$Variable == "Investment"),7] <- br_ci_3_loop[,7]
exp_corresp_ci
# Saving in csv file the exp_corresp_ci
#setwd("C:/Users/cancella/Google Drive/!IIASA/COPA/data/investOptions")
#save_exp_corresp_ci <- write.table(exp_corresp_ci, file = "InvestOpts_br_ci.csv", sep=";", row.names = FALSE)
#### Trying to add varCosts
#setwd("C:/Users/Rafael/Desktop/Google Drive @PPE/!IIASA/COPA  Initial Data/Costs/Tables")
setwd("C:/Users/cancella/Google Drive/!IIASA/COPA  Initial Data/Costs/Tables")
test_br_cvu <- read.csv2("tabela_para_invest_opts_br_sem_CI.csv", header = T, sep = ";", stringsAsFactors = F)
br_cvu_3_test <- bind_rows(br_cvu, br_cvu, br_cvu) %>% arrange(NOME)
br_cvu_3_test <- bind_cols(br_cvu_3, exp_corresp_ci[,6])
# Transforming every column in numeric
## N~ao entendo a sint'axe dessa fun'c~ao, mas ela transforma a coluna que eu quero em double e
## permite que eu adicione essa coluna na tabela que estamos montando
## Esta fun'cao so pode ser aplicada a uma tabela auxiliar, pq ela transforma algumas colunas em NAs.
br_cvu_3_test[sapply(br_cvu_3_test, is.factor)] <- lapply(br_cvu_3_test[sapply(br_cvu_3_test, is.factor)],
function(x) as.numeric(as.character(x)))
exp_corresp1 <- exp_corresp_ci
exp_corresp1[which(exp_corresp1$Variable == "VarCost"),7] <- br_cvu_3_test[which(br_cvu_3_test$Variable == "VarCost"),7]
exp_corresp_ci[which(exp_corresp_ci$Variable == "VarCost"),7] <- br_cvu_3_test[which(br_cvu_3_test$Variable == "VarCost"),7]
#### Adding available capacity
# Now our table already has investment costs and variable costs. Now we are in lack of the available capacity.
# As we don't have information about the available capacity of non existing plants, we'll use the total capacity of each.
# But for the existing ones, we'll use available capacity
br_ci_3[which(br_ci_3$pot_disp == 0),6] <- br_ci_3[which(br_ci_3$pot_disp == 0),5]
# Adding a column to allow comparation.
br_ci_3 <- bind_cols(br_ci_3, exp_corresp_ci[,6])
exp_corresp1 <- exp_corresp_ci
exp_corresp_ci[which(exp_corresp_ci$Variable == "MaxCap"),7] <- br_ci_3[which(br_ci_3$Variable == "MaxCap"),6]
# johannes said that is necessary to have at least 1000 GW in each region.
# Otherwise it could give infeasibilities. Let's verify it.
#### test
max_cap  <- filter(exp_corresp_ci, Variable == "MaxCap")
max_cap_grouped <- group_by(max_cap, nome)
Region <-  select(max_cap, Region)
Region <- Region[,2]
# Transforming the value column in double
max_cap[sapply(max_cap, is.character)] <- lapply(max_cap[sapply(max_cap, is.character)],
function(x) as.numeric(as.character(x)))
table_test <- bind_cols(Region, max_cap[,7])
#grouped_table_test <- group_by(table_test, Region)
#soma_test <- summarise(grouped_table_test, sum(Value))
soma_test <- table_test %>% group_by(Region) %>% summarise(sum(Value))
##### Including the last plants ####
# It is advisible to include one more plant in each region with 10.000 MW of capacity and with high variable cost.
last_plants <- invest_opts_sweden[67:nrow(invest_opts_sweden),]
# Changing the id
last_plants[,1] <- as_tibble(c(367:378))
# Changing the regions
last_plants[,2] <- regions_br[1:12,1]
# Changing the plant numbers
last_plants$P <- rep("P99", nrow(last_plants))
# Changing the tecnology column from "Thermal" to "Thermal.Virtual"
last_plants$Technology <- rep("Thermal.Virtual", nrow(last_plants))
###### Creating the invest_options_br ######
id_br_366 <- id_br[1:366,]
invest_opts_br_initial <- bind_cols(id_br_366, exp_corresp_ci[,3:ncol(exp_corresp_ci)])
colnames(invest_opts_br_initial, do.NULL = TRUE, prefix = "col")
colnames(invest_opts_br_initial) <- c("id", "Region", "P", "Technology", "Variable", "Value")
# converting the column value into integer
value_to_int <- invest_opts_br_initial
value_to_int[sapply(value_to_int, is.character)] <- lapply(value_to_int[sapply(value_to_int, is.character)],
function(x) as.numeric(as.character(x)))
invest_opts_br_final <- invest_opts_br_initial
invest_opts_br_final[,6] <- value_to_int[,6]
invest_opts_br <- bind_rows(invest_opts_br_final, last_plants)
tt<-invest_opts_br %>% group_by(Technology,Variable) %>% summarize(s=sum(Value)) # adjusting order of plants
invest_opts_br <- invest_opts_br %>% arrange(Region,P,Technology)
invest_opts_br$Technology <- "Thermal"
invest_opts_br_final
invest_opts_br
setwd("C:/Users/cancella/Google Drive/!IIASA/COPA/data/investOptions")
save_invest_opts_br <- write.table(invest_opts_br, file = "investOpts_br_thermal.sources_1.csv", sep = ";", row.names = FALSE )
ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
sys_exp <- ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
sys_exp <- ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
sys_exp <- ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
ggsave("C:/Users/cancella/Google Drive/!IIASA/COPA/runs/2_br_complete/system_expansion.pdf",sys_exp,width=30,height=20,units="cm")
thermal_gen <- ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
ggsave("C:/Users/cancella/Google Drive/!IIASA/COPA/runs/2_br_complete/x_term.pdf",thermal_gen,width=30,height=20,units="cm")
View(results)
View(results)
x_transfer <- results %>% filtes(name == "x_transfer")
x_transfer <- results %>% filter(name == "x_transfer")
x_transfer
x_transfer <- results %>% filter(name == "x_transfer") %>% group_by(reg, reg1, t) %>% summarise(exchanges = sum(value))
x_transfer
x_transfer <- results %>% filter(name == "x_transfer")
plot(fig01)
x_transfer <- results %>% filter(name == "x_transfer") %>% group_by(reg,t) %>% summarise(exchanges = sum(value))
x_transfer
x_transfer <- results %>% filter(name == "x_transfer") %>% group_by(reg,reg1, t) %>% summarise(exchanges = sum(value))
x_transfer
ggplot() +
geom_line(data = x_transfer, aes(x = as.numeric(t), y = exchanges, col = reg, group = 1), size = 1) +
facet_wrap(~reg, reg1) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Exchanges" ) + theme(plot.title = element_text(hjust = 0.5))
x_transfer
ggplot() +
geom_line(data = x_transfer, aes(x = as.numeric(t), y = exchanges, col = reg, group = 1), size = 1) +
facet_wrap(~c(reg, reg1)) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Exchanges" ) + theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_line(data = x_transfer, aes(x = as.numeric(t), y = exchanges, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Exchanges" ) + theme(plot.title = element_text(hjust = 0.5))
unique(x_transfer$reg)
unique(x_transfer$reg1)
View(results)
View(results)
x_curtail <- results %>% filter(name == "x_curtail")
x_curtail
sum(x_curtail$value)
setwd("C:/Users/cancella/Google Drive/!IIASA/COPA/data/wind")
w <- read_feather("wind_br1.feather")
View(w)
View(w)
tech
setwd("C:/Users/cancella/Google Drive/!IIASA/COPA/data/investOptions")
#setwd("PC")
thermal_cost <- as_tibble(read.csv2("investOpts_br_thermal.sources_1.csv", sep = ";", header = T)) %>%
filter(Variable == "VarCost")
thermal_cost_i <- thermal_cost
thermal_cost_i[sapply(thermal_cost_i, is.factor)] <- lapply(thermal_cost_i[sapply(thermal_cost_i, is.factor)],
function(x) as.numeric(as.character(x)))
thermal_cost$Value <- thermal_cost_i$Value
comparation_var_cost <- thermal_cost %>% group_by(Region, Technology) %>% summarise(avg_varCost = mean(Value))
tech <- stringr::str_split_fixed(comparation_var_cost$Technology, ".",9) # Separating elements of one column
comparation_var_cost$Technology <- tech[,9]
ggplot() +
geom_bar(data = comparation_var_cost, aes(x = Technology, y = avg_varCost, fill = Technology),stat = "identity") +
facet_wrap(~Region) +   scale_fill_brewer(palette="Paired") + theme(axis.text.x = element_text(angle=45)) +
ylab("R$ / MWh ") + xlab("") +  ggtitle("Comparation variable thermal costs" ) +
theme(plot.title = element_text(hjust = 0.5))
thermal_cost <- as_tibble(read.csv2("investOpts_br_thermal.sources.csv", sep = ";", header = T)) %>%
filter(Variable == "VarCost")
thermal_cost_i <- thermal_cost
thermal_cost_i[sapply(thermal_cost_i, is.factor)] <- lapply(thermal_cost_i[sapply(thermal_cost_i, is.factor)],
function(x) as.numeric(as.character(x)))
thermal_cost$Value <- thermal_cost_i$Value
comparation_var_cost <- thermal_cost %>% group_by(Region, Technology) %>% summarise(avg_varCost = mean(Value))
tech <- stringr::str_split_fixed(comparation_var_cost$Technology, ".",9) # Separating elements of one column
comparation_var_cost$Technology <- tech[,9]
ggplot() +
geom_bar(data = comparation_var_cost, aes(x = Technology, y = avg_varCost, fill = Technology),stat = "identity") +
facet_wrap(~Region) +   scale_fill_brewer(palette="Paired") + theme(axis.text.x = element_text(angle=45)) +
ylab("R$ / MWh ") + xlab("") +  ggtitle("Comparation variable thermal costs" ) +
theme(plot.title = element_text(hjust = 0.5))
x_invest_intermittent <- results %>% filter(name == "x_invest_intermittent")
x_invest_thermal_cap <- results %>% filter(name == "x_invest_thermal_cap")
invest <- rbind(x_invest_intermittent, x_invest_thermal_cap) %>% select(name, reg, p, value, iTechnology)
invest$iTechnology[invest$name == "x_invest_thermal_cap"] <- "Thermal"
expansion <- invest %>% group_by(reg, iTechnology) %>% summarise(avg_exp = mean(value))
sys_exp <- ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_bar(data = comparation_var_cost, aes(x = Technology, y = avg_varCost, fill = Technology),stat = "identity") +
facet_wrap(~Region) +   scale_fill_brewer(palette="Paired") + theme(axis.text.x = element_text(angle=45)) +
ylab("R$ / MWh ") + xlab("") +  ggtitle("Comparation variable thermal costs" ) +
theme(plot.title = element_text(hjust = 0.5))
results<-readModelResults("input_tr.gdx",
"results_time_resolution.gdx",
period,
"2_br_complete")
#############Show results as Figures
r_region<- results %>% filter(!is.na(reg)) %>%
group_by(name,reg,datetime) %>%
summarize(value=sum(value))
#adapt negative values
r_region[r_region$name=="x_h_stor_in"|
r_region$name=="x_curtail"|
r_region$name=="x_spill"|
r_region$name=="transfer_out",]$value<-r_region[r_region$name=="x_h_stor_in"|
r_region$name=="x_curtail"|
r_region$name=="x_spill"|
r_region$name=="transfer_out",]$value*-1
r_load <-r_region %>% filter(name=="load")%>% mutate(dat_=as.POSIXct(datetime)) %>% ungroup()
r_trans <-r_region %>% filter(name=="transfer_net")%>% mutate(dat_=as.POSIXct(datetime)) %>% ungroup()
fj<-full_join(r_load,r_trans,by=c("reg","datetime","dat_")) %>% select(reg,dat_,datetime,val1=value.x,val2=value.y)
r_loaddiff<-fj %>% mutate(a=val1-val2) %>% mutate(name="diff")
###############weekly - load balance###############
r_region_weekly <- r_region %>% group_by(name,reg,w=week(datetime),y=year(datetime)) %>%
summarize(value=mean(value),dat_=as.POSIXct(min(datetime)))
r_load_weekly <- r_region_weekly %>% filter(name=="load")
r_loaddiff_weekly<- r_loaddiff %>% group_by(name,reg,w=week(datetime),y=year(datetime)) %>%
summarize(diff=mean(a),dat_=min(datetime))
dropNames<-c("x_h_stor_lv",
"load",
"x_h_stor_in",
"x_transfer",
"bal_",
"x_hyd_up",
"hydro")
fig01<-r_region_weekly %>% filter(!(name %in% dropNames)) %>%
ggplot(aes(x=dat_,y=value,fill=name)) + geom_area() + facet_wrap(~reg) +
geom_line(data=r_load_weekly,aes(x=dat_,y=value)) +
geom_line(data=r_loaddiff_weekly,aes(x=dat_,y=diff),col="red") +ylab("Avg. Weekly Cap (MW)")
plot(fig01)
includeNames<-c("x_h_stor_in",
"x_h_stor_out",
"x_hydro",
"x_spill")
#"x_slack")
#adapt negative values
r_region$value[r_region$name %in%
c("x_h_stor_in","x_h_stor_out","x_spill")]<-r_region$value[r_region$name %in%
c("x_h_stor_in","x_h_stor_out","x_spill")]*-1
r_region_weekly <- r_region %>% group_by(name,reg,w=week(datetime),y=year(datetime)) %>%
summarize(value=mean(value),dat_=as.POSIXct(min(datetime)))
#"x_h_stor_lv",
#"hydro"
r_hydro_weekly <- r_region_weekly %>% filter(name=="hydro")
fig02<-r_region_weekly %>% filter((name %in% includeNames)) %>%
ggplot(aes(x=dat_,y=value,fill=name)) + geom_area() + facet_wrap(~reg) +
geom_line(data=r_hydro_weekly,aes(x=dat_,y=value))
plot(fig02)
r_storage_weekly <- r_region_weekly %>% filter(name=="x_h_stor_lv")
r_storage_weekly %>% ggplot(aes(x=dat_,y=value)) + geom_line() + facet_wrap(~reg)
renew <- results %>% filter(name == "x_renew")
sum(renew$value)
x_invest_intermittent <- results %>% filter(name == "x_invest_intermittent")
x_invest_thermal_cap <- results %>% filter(name == "x_invest_thermal_cap")
invest <- rbind(x_invest_intermittent, x_invest_thermal_cap) %>% select(name, reg, p, value, iTechnology)
invest$iTechnology[invest$name == "x_invest_thermal_cap"] <- "Thermal"
expansion <- invest %>% group_by(reg, iTechnology) %>% summarise(avg_exp = mean(value))
#sys_exp
ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
x_term <- results %>% filter(name == "x_term")
summary <- x_term %>% group_by(reg, t) %>% summarise(x_term = sum(value))
thermal_gen <- ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
x_transfer <- results %>% filter(name == "x_transfer") %>% group_by(reg,reg1, t) %>% summarise(exchanges = sum(value))
ggplot() +
geom_line(data = x_transfer, aes(x = as.numeric(t), y = exchanges, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Exchanges" ) + theme(plot.title = element_text(hjust = 0.5))
r_storage_weekly <- r_region_weekly %>% filter(name=="x_h_stor_lv")
r_storage_weekly %>% ggplot(aes(x=dat_,y=value)) + geom_line() + facet_wrap(~reg)
results<-readModelResults("input_tr.gdx",
"results_time_resolution.gdx",
period,
"2_br_complete")
#############Show results as Figures
r_region<- results %>% filter(!is.na(reg)) %>%
group_by(name,reg,datetime) %>%
summarize(value=sum(value))
#adapt negative values
r_region[r_region$name=="x_h_stor_in"|
r_region$name=="x_curtail"|
r_region$name=="x_spill"|
r_region$name=="transfer_out",]$value<-r_region[r_region$name=="x_h_stor_in"|
r_region$name=="x_curtail"|
r_region$name=="x_spill"|
r_region$name=="transfer_out",]$value*-1
r_load <-r_region %>% filter(name=="load")%>% mutate(dat_=as.POSIXct(datetime)) %>% ungroup()
r_trans <-r_region %>% filter(name=="transfer_net")%>% mutate(dat_=as.POSIXct(datetime)) %>% ungroup()
fj<-full_join(r_load,r_trans,by=c("reg","datetime","dat_")) %>% select(reg,dat_,datetime,val1=value.x,val2=value.y)
r_loaddiff<-fj %>% mutate(a=val1-val2) %>% mutate(name="diff")
###############weekly - load balance###############
r_region_weekly <- r_region %>% group_by(name,reg,w=week(datetime),y=year(datetime)) %>%
summarize(value=mean(value),dat_=as.POSIXct(min(datetime)))
r_load_weekly <- r_region_weekly %>% filter(name=="load")
r_loaddiff_weekly<- r_loaddiff %>% group_by(name,reg,w=week(datetime),y=year(datetime)) %>%
summarize(diff=mean(a),dat_=min(datetime))
dropNames<-c("x_h_stor_lv",
"load",
"x_h_stor_in",
"x_transfer",
"bal_",
"x_hyd_up",
"hydro")
fig01<-r_region_weekly %>% filter(!(name %in% dropNames)) %>%
ggplot(aes(x=dat_,y=value,fill=name)) + geom_area() + facet_wrap(~reg) +
geom_line(data=r_load_weekly,aes(x=dat_,y=value)) +
geom_line(data=r_loaddiff_weekly,aes(x=dat_,y=diff),col="red") +ylab("Avg. Weekly Cap (MW)")
plot(fig01)
x_invest_intermittent <- results %>% filter(name == "x_invest_intermittent")
x_invest_thermal_cap <- results %>% filter(name == "x_invest_thermal_cap")
invest <- rbind(x_invest_intermittent, x_invest_thermal_cap) %>% select(name, reg, p, value, iTechnology)
invest$iTechnology[invest$name == "x_invest_thermal_cap"] <- "Thermal"
expansion <- invest %>% group_by(reg, iTechnology) %>% summarise(avg_exp = mean(value))
#sys_exp <-
ggplot() +
geom_bar(data = expansion, aes(x = iTechnology, y = avg_exp, fill = iTechnology),stat = "identity") +
facet_wrap(~reg) +   scale_fill_brewer(palette="Set2") +
ylab("MW") + xlab("") +  ggtitle("System expansion - capacity" ) +
theme(plot.title = element_text(hjust = 0.5))
x_term <- results %>% filter(name == "x_term")
summary <- x_term %>% group_by(reg, t) %>% summarise(x_term = sum(value))
#thermal_gen <-
ggplot() +
geom_line(data = summary, aes(x = as.numeric(t), y = x_term, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Thermal generation" ) + theme(plot.title = element_text(hjust = 0.5))
x_transfer <- results %>% filter(name == "x_transfer") %>% group_by(reg,reg1, t) %>% summarise(exchanges = sum(value))
ggplot() +
geom_line(data = x_transfer, aes(x = as.numeric(t), y = exchanges, col = reg, group = 1), size = 1) +
facet_wrap(~reg) + theme(axis.text.x = element_text(angle=45)) +
ylab("MWh ") + xlab("") + ggtitle("Exchanges" ) + theme(plot.title = element_text(hjust = 0.5))
View(w)
w_12 <- w[4369:5112,]
w_12
w[4368,]
w[4367,]
a <- c(1:3, NA, NA)
a
a[is.na] <- 0
a <- as_tibble(c(1:3, NA, NA))
a
a$value[is.na(a$value)] <- 0
a
